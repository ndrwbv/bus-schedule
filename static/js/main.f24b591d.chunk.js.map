{"version":3,"sources":["Schedule/consts.ts","Schedule/helpers.ts","img/green-heart.svg","img/bus-stop.svg","img/next-bus.svg","img/telegram-logo.svg","img/upcoming-bus.svg","img/write.svg","Schedule/index.tsx","App.tsx","index.tsx"],"names":["Stops","label","value","SCHEDULE","1","2","3","4","5","6","0","calculateHowMuchIsLeft","closestTime","hours","minutes","mins","left","Math","abs","getTime","Date","trunc","round","MAIN_GREY","MainLayout","styled","div","HowMuchLeftContainer","LinksBlock","BusEstimation","TextWrapper","p","HighLighted","span","OtherTime","TimeStamp","GoButton","button","props","active","GoButtonContainer","Container","GrayText","currentDay","getDay","Icon","img","ImageWrapper","w","h","HeaderContainer","HeaderText","h1","HeaderItem","Header","text","imgSrc","children","src","FavoriteBusStopItem","FavoriteBusStopContainer","FavoriteBusStopList","stopList","activeId","map","stop","id","TelegramContainer","TelegramText","TelegramButton","TelegramLogo","Schedule","React","useState","busStop","setBusStop","setLeft","closestTimeArray","setClossestTimeArray","setClossestTime","_everyMinuteUpdate","_setUpdate","useEffect","console","log","int","setInterval","now","clearInterval","_closestTime","i","length","splitted","split","item","parseInt","possibleDate","setHours","findClosesTime","getMinutes","getHours","push","findClosesTimeArray","GreenHeart","BusStop","onChange","e","target","NextBus","UpcomingBus","d","Write","href","rel","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PASaA,EAAQ,CACnB,CACEC,MAAO,6EACPC,MAAO,8EAET,CACED,MAAO,sEACPC,MAAO,wEAMEC,EAAuD,CAClEC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,KCxIPC,EAAyB,SACpCC,GAEA,IAAKA,EACH,MAAO,CACLC,MAAO,KACPC,QAAS,MAGb,IAxBuBC,EAwBjBC,EACJC,KAAKC,IAAIN,EAAYO,WAAY,IAAIC,MAAOD,WAAa,IAAO,GAElE,OA3BuBJ,EA2B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","file":"static/js/main.f24b591d.chunk.js","sourcesContent":["export type DayKeys =\n  | \"monday\"\n  | \"tuesday\"\n  | \"wednesday\"\n  | \"thursday\"\n  | \"friday\"\n  | \"saturday\"\n  | \"sunday\";\n\nexport const Stops = [\n  {\n    label: \"В. Маяковского\",\n    value: \"В. Маяковского\",\n  },\n  {\n    label: \"сосновый бор\",\n    value: \"сосновый бор\",\n  },\n];\n\nexport type StopKeys = \"В. Маяковского\" | \"сосновый бор\";\n\nexport const SCHEDULE: Record<number, Record<StopKeys, string[]>> = {\n  1: {\n    \"В. Маяковского\": [\n      \"6:37\",\n      \"07:07\",\n      \"07:22\",\n      \"07:42\",\n      \"08:17\",\n      \"09:12\",\n      \"09:42\",\n      \"10:12\",\n      \"10:42\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:22\",\n      \"17:52\",\n      \"18:22\",\n      \"18:52\",\n      \"19:42\",\n      \"20:22\",\n      \"21:01\",\n    ],\n    \"сосновый бор\": [],\n  },\n  2: {\n    \"В. Маяковского\": [\n      \"6:37\",\n      \"07:07\",\n      \"07:22\",\n      \"07:42\",\n      \"08:17\",\n      \"09:12\",\n      \"09:42\",\n      \"10:12\",\n      \"10:42\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:22\",\n      \"17:52\",\n      \"18:22\",\n      \"18:52\",\n      \"19:42\",\n      \"20:22\",\n      \"21:01\",\n    ],\n    \"сосновый бор\": [],\n  },\n  3: {\n    \"В. Маяковского\": [\n      \"6:37\",\n      \"07:07\",\n      \"07:22\",\n      \"07:42\",\n      \"08:17\",\n      \"09:12\",\n      \"09:42\",\n      \"10:12\",\n      \"10:42\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:22\",\n      \"17:52\",\n      \"18:22\",\n      \"18:52\",\n      \"19:42\",\n      \"20:22\",\n      \"21:01\",\n    ],\n    \"сосновый бор\": [],\n  },\n  4: {\n    \"В. Маяковского\": [\n      \"6:37\",\n      \"07:07\",\n      \"07:22\",\n      \"07:42\",\n      \"08:17\",\n      \"09:12\",\n      \"09:42\",\n      \"10:12\",\n      \"10:42\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:22\",\n      \"17:52\",\n      \"18:22\",\n      \"18:52\",\n      \"19:42\",\n      \"20:22\",\n      \"21:01\",\n    ],\n    \"сосновый бор\": [],\n  },\n  5: {\n    \"В. Маяковского\": [\n      \"6:37\",\n      \"07:07\",\n      \"07:22\",\n      \"07:42\",\n      \"08:17\",\n      \"09:12\",\n      \"09:42\",\n      \"10:12\",\n      \"10:42\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:22\",\n      \"17:52\",\n      \"18:22\",\n      \"18:52\",\n      \"19:42\",\n      \"20:22\",\n      \"21:01\",\n    ],\n    \"сосновый бор\": [],\n  },\n  6: {\n    \"В. Маяковского\": [\n      \"07:07\",\n      \"08:17\",\n      \"09:12\",\n      \"10:12\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"13:32\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:52\",\n      \"18:52\",\n      \"19:42\",\n    ],\n    \"сосновый бор\": [],\n  },\n  0: {\n    \"В. Маяковского\": [\n      \"08:17\",\n      \"09:12\",\n      \"10:12\",\n      \"11:22\",\n      \"12:07\",\n      \"12:57\",\n      \"14:42\",\n      \"15:52\",\n      \"16:52\",\n      \"17:52\",\n      \"18:52\",\n      \"19:42\",\n    ],\n    \"сосновый бор\": [],\n  },\n};\n","/**\n * находит ближайшее время в расписании\n * @param hours\n */\nexport const findClosesTime = (hours: string[]): Date | null => {\n  let closestTime: Date | null = null;\n\n  for (let i = 0; i < hours.length; i++) {\n    const splitted = hours[i].split(\":\").map((item) => parseInt(item, 10));\n\n    const possibleDate = new Date().setHours(splitted[0], splitted[1]);\n\n    if (possibleDate - new Date().getTime() > 0) {\n      if (!closestTime) closestTime = new Date(possibleDate);\n      else if (closestTime.getTime() - possibleDate > 0)\n        closestTime = new Date(possibleDate);\n    }\n  }\n\n  return closestTime;\n};\n\n/**\n * Возвращает массив таймингов которые будут в будущем\n * @param hours\n */\n export const findClosesTimeArray = (hours: string[]): string[] => {\n  let closestTime: string[] = [];\n  \n  for (let i = 0; i < hours.length; i++) {\n    const splitted = hours[i].split(\":\").map((item) => parseInt(item, 10));\n\n    const possibleDate = new Date().setHours(splitted[0], splitted[1]);\n\n    if (possibleDate - new Date().getTime() > 0) {\n      closestTime.push(hours[i])\n    }\n  }\n\n  return closestTime;\n};\n\nexport interface ITime {\n  hours: number | null;\n  minutes: number | null;\n}\nconst getTimeFromMins = (mins: number): ITime => {\n  let hours = Math.trunc(mins / 60);\n  let minutes = Math.round(mins % 60);\n\n  return {\n    hours,\n    minutes,\n  };\n};\n\n/**\n * Находит разницу текущего времени с расписанием = столько надо ждать\n * @param closestTime\n * @currentDate\n */\nexport const calculateHowMuchIsLeft = (\n  closestTime: Date | null\n): ITime => {\n  if (!closestTime)\n    return {\n      hours: null,\n      minutes: null,\n    };\n\n  const left =\n    Math.abs(closestTime.getTime() - new Date().getTime()) / 1000 / 60;\n\n  return getTimeFromMins(left);\n};\n","export default __webpack_public_path__ + \"static/media/green-heart.26c7c028.svg\";","export default __webpack_public_path__ + \"static/media/bus-stop.a03f158e.svg\";","export default __webpack_public_path__ + \"static/media/next-bus.530f63af.svg\";","export default __webpack_public_path__ + \"static/media/telegram-logo.06cf38ae.svg\";","export default __webpack_public_path__ + \"static/media/upcoming-bus.3988527c.svg\";","export default __webpack_public_path__ + \"static/media/write.fe751479.svg\";","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { SCHEDULE, StopKeys, Stops } from \"./consts\";\nimport {\n  calculateHowMuchIsLeft,\n  findClosesTime,\n  findClosesTimeArray,\n  ITime,\n} from \"./helpers\";\nimport GreenHeart from \"../img/green-heart.svg\";\nimport BusStop from \"../img/bus-stop.svg\";\nimport NextBus from \"../img/next-bus.svg\";\nimport TelegramLogo from \"../img/telegram-logo.svg\";\nimport UpcomingBus from \"../img/upcoming-bus.svg\";\nimport Write from \"../img/write.svg\";\n\nconst MAIN_GREY = \"#F4F4F4\";\nconst MainLayout = styled.div`\n  padding: 15px;\n`;\nconst HowMuchLeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 15px 17px;\n  background-color: ${MAIN_GREY};\n  border-radius: 6px;\n`;\nconst LinksBlock = styled.div``;\nconst BusEstimation = styled.div`\n  font-size: 18px;\n  margin-left: 19px;\n`;\nconst TextWrapper = styled.p``;\nconst HighLighted = styled.span`\n  font-weight: bold;\n  margin-left: 8px;\n`;\nconst OtherTime = styled.div`\n  padding: 22px 26px;\n  background-color: ${MAIN_GREY};\n  border-radius: 6px;\n`;\nconst TimeStamp = styled.p``;\n\nconst GoButton = styled.button<{ active?: boolean }>`\n  width: 100%;\n  border: none;\n  border-radius: 6px;\n  background-color: ${(props) => (props.active ? \"#336CFF\" : MAIN_GREY)};\n  color: ${(props) => (props.active ? \"white\" : \"black\")};\n  padding: 12px 17px;\n\n  & + & {\n    margin-left: 10px;\n  }\n`;\nconst GoButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Container = styled.div`\n  & + & {\n    margin-top: 44px;\n  }\n`;\n\nconst GrayText = styled.p`\n  margin: 0;\n  color: #b2b2b2;\n  font-size: 12px;\n  a {\n    color: inherit;\n  }\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\n\nconst currentDay = new Date().getDay();\n\nconst Icon = styled.img<{ src: any }>``;\nconst ImageWrapper = styled.div<{ w: number; h: number }>`\n  width: ${(props) => `${props.w}px`};\n  height: ${(props) => `${props.h}px`};\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\nconst HeaderText = styled.h1`\n  font-size: 16px;\n  font-weight: normal;\n  margin-left: 8px;\n`;\nconst HeaderItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\ninterface IHeaderProps {\n  text: string;\n  imgSrc: any;\n  children?: React.ReactNode;\n}\nconst Header: React.FC<IHeaderProps> = ({ text, imgSrc, children = null }) => {\n  return (\n    <HeaderContainer>\n      <HeaderItem>\n        <ImageWrapper w={20} h={20}>\n          <Icon src={imgSrc}></Icon>\n        </ImageWrapper>\n\n        <HeaderText>{text}</HeaderText>\n      </HeaderItem>\n\n      {children && <HeaderItem>{children}</HeaderItem>}\n    </HeaderContainer>\n  );\n};\n\nconst FavoriteBusStopItem = styled.div<{ active: boolean }>`\n  padding: 8px 17px;\n  border-radius: 30px;\n  background-color: ${(props) => (props.active ? \"#336CFF\" : MAIN_GREY)};\n  color: ${(props) => (props.active ? \"white\" : \"black\")};\n\n  & + & {\n    margin-left: 12px;\n  }\n`;\nconst FavoriteBusStopContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst FavoriteBusStopList: React.FC<{\n  stopList: { id: string; label: string }[];\n  activeId: string;\n}> = ({ stopList, activeId }) => {\n  return (\n    <FavoriteBusStopContainer>\n      {stopList.map((stop) => (\n        <FavoriteBusStopItem active={stop.id === activeId}>\n          {stop.label}\n        </FavoriteBusStopItem>\n      ))}\n    </FavoriteBusStopContainer>\n  );\n};\n\nconst TelegramContainer = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  color: #26a4e3;\n  border: 1px solid #26a4e3;\n  background-color: white;\n  border-radius: 6px;\n`;\nconst TelegramText = styled.p`\n  color: #26a4e3;\n  margin: 0 0 0 10px;\n`;\nconst TelegramButton = () => {\n  return (\n    <TelegramContainer>\n      <ImageWrapper w={20} h={20}>\n        <Icon src={TelegramLogo}></Icon>\n      </ImageWrapper>\n\n      <TelegramText>Написать в телеграм</TelegramText>\n    </TelegramContainer>\n  );\n};\nfunction Schedule() {\n  const [busStop, setBusStop] = React.useState<StopKeys>(\"В. Маяковского\");\n  const [left, setLeft] = React.useState<ITime>({\n    hours: 0,\n    minutes: 0,\n  });\n  const [closestTimeArray, setClossestTimeArray] = React.useState<string[]>([]);\n  const [closestTime, setClossestTime] = React.useState<Date | null>(null);\n\n  const [_everyMinuteUpdate, _setUpdate] = React.useState(0);\n\n  React.useEffect(() => {\n    console.log(\"in interval\");\n    const int = setInterval(() => _setUpdate(Date.now()), 1000);\n\n    return () => {\n      clearInterval(int);\n    };\n  }, [_everyMinuteUpdate]);\n\n  React.useEffect(() => {\n    const _closestTime = findClosesTime(SCHEDULE[currentDay][busStop]);\n\n    console.log(\n      \"date\",\n      new Date(),\n      _closestTime,\n      SCHEDULE[currentDay][busStop]\n    );\n    if (\n      _closestTime?.getMinutes() !== closestTime?.getMinutes() &&\n      _closestTime?.getHours() !== closestTime?.getHours()\n    ) {\n      setClossestTimeArray(findClosesTimeArray(SCHEDULE[currentDay][busStop]));\n      setClossestTime(_closestTime);\n    }\n  }, [_everyMinuteUpdate, closestTime, busStop]);\n\n  React.useEffect(() => {\n    const left = calculateHowMuchIsLeft(closestTime);\n\n    setLeft(left);\n  }, [_everyMinuteUpdate, closestTime]);\n\n  const renderLeftToString = () => {\n    if (left.hours === null && left.minutes === null)\n      return (\n        <TextWrapper>\n          Автобус на остановку <b>{busStop}</b> сегодня не приедет\n        </TextWrapper>\n      );\n\n    return (\n      <TextWrapper>\n        Следующий автобус приедет через\n        <HighLighted>\n          {left.hours}ч {left.minutes}м\n        </HighLighted>\n      </TextWrapper>\n    );\n  };\n\n  return (\n    <MainLayout>\n      <Container>\n        <GoButtonContainer>\n          <GoButton active>еду в сторону парка</GoButton>\n          <GoButton>еду из парка</GoButton>\n        </GoButtonContainer>\n      </Container>\n\n      <Container>\n        <Header text={\"Мои остановки\"} imgSrc={GreenHeart} />\n        <FavoriteBusStopList\n          stopList={[\n            { id: \"d\", label: \"В. маяк\" },\n            { id: \"v\", label: \"ТГУ\" },\n          ]}\n          activeId={\"d\"}\n        />\n      </Container>\n\n      <Container>\n        <Header text={\"Остановка\"} imgSrc={BusStop}>\n          <select onChange={(e) => setBusStop(e.target.value as StopKeys)}>\n            {Stops.map((stop) => (\n              <option value={stop.value}>{stop.label}</option>\n            ))}\n          </select>\n        </Header>\n\n        <HowMuchLeftContainer>\n          <ImageWrapper w={29} h={29}>\n            <Icon src={NextBus}></Icon>\n          </ImageWrapper>\n\n          <BusEstimation>{renderLeftToString()}</BusEstimation>\n        </HowMuchLeftContainer>\n      </Container>\n\n      <Container>\n        <Header text={\"Ещё автобусы на сегодня\"} imgSrc={UpcomingBus} />\n\n        <OtherTime>\n          {closestTimeArray.length === 0\n            ? \"Автобусов на сегодня нет\"\n            : closestTimeArray.map((d) => <TimeStamp>{d}</TimeStamp>)}\n        </OtherTime>\n      </Container>\n\n      <Container>\n        <Header\n          text={\"Увидели ошибку? Есть предложение по улучшению?\"}\n          imgSrc={Write}\n        />\n\n        <TelegramButton />\n      </Container>\n\n      <Container>\n        <LinksBlock>\n          <GrayText>\n            Расписание взято с сайта{\" \"}\n            <a\n              href=\"http://www.tomskavtotrans.ru/60\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              tomskavtotrans.ru\n            </a>\n          </GrayText>\n\n          <GrayText>© Andrew Boev</GrayText>\n        </LinksBlock>\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default Schedule;\n","\nimport React from 'react';\nimport Schedule from './Schedule';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Schedule />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}