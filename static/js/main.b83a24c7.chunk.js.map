{"version":3,"sources":["Schedule/consts.ts","Schedule/helpers.ts","img/green-heart.svg","img/bus-stop.svg","img/next-bus.svg","img/upcoming-bus.svg","img/write.svg","FavoriteBusStopList.tsx","ImageWrapper.tsx","Header.tsx","img/telegram-logo.svg","TelegramButton.tsx","Schedule/index.tsx","App.tsx","index.tsx"],"names":["MAIN_GREY","Stops","label","value","SCHEDULE","1","2","3","4","5","6","0","calculateHowMuchIsLeft","closestTime","hours","minutes","mins","left","Math","abs","getTime","Date","trunc","round","FavoriteBusStopItem","styled","div","props","active","FavoriteBusStopContainer","FavoriteBusStopList","stopList","activeId","onClick","map","stop","ImageWrapper","w","h","HeaderContainer","HeaderText","h1","HeaderItem","Header","Text","text","imgSrc","children","src","width","height","uniquifyIDs","TelegramContainer","button","TelegramText","p","TelegramButton","href","target","rel","TelegramLogo","title","MainLayout","HowMuchLeftContainer","LinksBlock","BusEstimation","TextWrapper","HighLighted","span","OtherTime","TimeStamp","GoButton","AddToFavoriteButton","status","GoButtonContainer","Container","GrayText","currentDay","getDay","Schedule","React","useState","busStop","setBusStop","setLeft","closestTimeArray","setClossestTimeArray","setClossestTime","_everyMinuteUpdate","_setUpdate","direction","setDirection","favoriteBusStops","setFavoriteBusStops","useEffect","localStorageItem","localStorage","getItem","favoriteStops","JSON","parse","int","setInterval","now","clearInterval","_closestTime","i","length","splitted","split","item","parseInt","possibleDate","setHours","findClosesTime","getMinutes","getHours","push","findClosesTimeArray","saveFavoriteBusStops","stops","setItem","stringify","getFavoriteBusStop","isBusStopFavorite","includes","GreenHeart","filter","BusStop","options","onChange","e","find","defaultValue","NextBus","UpcomingBus","d","newStops","Write","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAaA,EAAY,UAeZC,EAAiB,CAC5B,CACEC,MAAO,6EACPC,MAAO,8EAET,CACED,MAAO,sEACPC,MAAO,wEAMEC,EAA2E,CACtF,GAAM,CACJC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,KAGpB,IAAO,CACLN,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,IAElBC,EAAG,CACD,6EAAkB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEF,sEAAgB,MCjUTC,EAAyB,SACpCC,GAEA,IAAKA,EACH,MAAO,CACLC,MAAO,KACPC,QAAS,MAGb,IAxBuBC,EAwBjBC,EACJC,KAAKC,IAAIN,EAAYO,WAAY,IAAIC,MAAOD,WAAa,IAAO,GAElE,OA3BuBJ,EA2BAC,EAvBhB,CACLH,MAJUI,KAAKI,MAAMN,EAAO,IAK5BD,QAJYG,KAAKK,MAAMP,EAAO,MChDnB,MAA0B,wCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,yCCA1B,MAA0B,kC,OCGnCQ,EAAsBC,IAAOC,IAAV,6JAGH,SAACC,GAAD,OAAYA,EAAMC,OAAS,UAAY5B,K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","file":"static/js/main.b83a24c7.chunk.js","sourcesContent":["export const MAIN_GREY = \"#F4F4F4\";\n\nexport type DayKeys =\n  | \"monday\"\n  | \"tuesday\"\n  | \"wednesday\"\n  | \"thursday\"\n  | \"friday\"\n  | \"saturday\"\n  | \"sunday\";\n\nexport interface IStop {\n  value: StopKeys;\n  label: string;\n}\nexport const Stops: IStop[] = [\n  {\n    label: \"В. Маяковского\",\n    value: \"В. Маяковского\",\n  },\n  {\n    label: \"сосновый бор\",\n    value: \"сосновый бор\",\n  },\n];\n\nexport type StopKeys = \"В. Маяковского\" | \"сосновый бор\";\nexport type Directions = \"in\" | \"out\";\nexport const SCHEDULE: Record<Directions, Record<number, Record<StopKeys, string[]>>> = {\n  \"in\": {\n    1: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    2: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    3: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    4: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    5: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    6: {\n      \"В. Маяковского\": [\n        \"07:07\",\n        \"08:17\",\n        \"09:12\",\n        \"10:12\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:52\",\n        \"18:52\",\n        \"19:42\",\n      ],\n      \"сосновый бор\": [],\n    },\n    0: {\n      \"В. Маяковского\": [\n        \"08:17\",\n        \"09:12\",\n        \"10:12\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:52\",\n        \"18:52\",\n        \"19:42\",\n      ],\n      \"сосновый бор\": [],\n    },\n  },\n  \"out\": {\n    1: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    2: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    3: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    4: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    5: {\n      \"В. Маяковского\": [\n        \"6:37\",\n        \"07:07\",\n        \"07:22\",\n        \"07:42\",\n        \"08:17\",\n        \"09:12\",\n        \"09:42\",\n        \"10:12\",\n        \"10:42\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:22\",\n        \"17:52\",\n        \"18:22\",\n        \"18:52\",\n        \"19:42\",\n        \"20:22\",\n        \"21:01\",\n      ],\n      \"сосновый бор\": [],\n    },\n    6: {\n      \"В. Маяковского\": [\n        \"07:07\",\n        \"08:17\",\n        \"09:12\",\n        \"10:12\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"13:32\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:52\",\n        \"18:52\",\n        \"19:42\",\n      ],\n      \"сосновый бор\": [],\n    },\n    0: {\n      \"В. Маяковского\": [\n        \"08:17\",\n        \"09:12\",\n        \"10:12\",\n        \"11:22\",\n        \"12:07\",\n        \"12:57\",\n        \"14:42\",\n        \"15:52\",\n        \"16:52\",\n        \"17:52\",\n        \"18:52\",\n        \"19:42\",\n      ],\n      \"сосновый бор\": [],\n    },\n  }\n  \n};\n","/**\n * находит ближайшее время в расписании\n * @param hours\n */\nexport const findClosesTime = (hours: string[]): Date | null => {\n  let closestTime: Date | null = null;\n\n  for (let i = 0; i < hours.length; i++) {\n    const splitted = hours[i].split(\":\").map((item) => parseInt(item, 10));\n\n    const possibleDate = new Date().setHours(splitted[0], splitted[1]);\n\n    if (possibleDate - new Date().getTime() > 0) {\n      if (!closestTime) closestTime = new Date(possibleDate);\n      else if (closestTime.getTime() - possibleDate > 0)\n        closestTime = new Date(possibleDate);\n    }\n  }\n\n  return closestTime;\n};\n\n/**\n * Возвращает массив таймингов которые будут в будущем\n * @param hours\n */\n export const findClosesTimeArray = (hours: string[]): string[] => {\n  let closestTime: string[] = [];\n  \n  for (let i = 0; i < hours.length; i++) {\n    const splitted = hours[i].split(\":\").map((item) => parseInt(item, 10));\n\n    const possibleDate = new Date().setHours(splitted[0], splitted[1]);\n\n    if (possibleDate - new Date().getTime() > 0) {\n      closestTime.push(hours[i])\n    }\n  }\n\n  return closestTime;\n};\n\nexport interface ITime {\n  hours: number | null;\n  minutes: number | null;\n}\nconst getTimeFromMins = (mins: number): ITime => {\n  let hours = Math.trunc(mins / 60);\n  let minutes = Math.round(mins % 60);\n\n  return {\n    hours,\n    minutes,\n  };\n};\n\n/**\n * Находит разницу текущего времени с расписанием = столько надо ждать\n * @param closestTime\n * @currentDate\n */\nexport const calculateHowMuchIsLeft = (\n  closestTime: Date | null\n): ITime => {\n  if (!closestTime)\n    return {\n      hours: null,\n      minutes: null,\n    };\n\n  const left =\n    Math.abs(closestTime.getTime() - new Date().getTime()) / 1000 / 60;\n\n  return getTimeFromMins(left);\n};\n","export default __webpack_public_path__ + \"static/media/green-heart.4f9f3b02.svg\";","export default __webpack_public_path__ + \"static/media/bus-stop.3189510d.svg\";","export default __webpack_public_path__ + \"static/media/next-bus.d9e4ed7a.svg\";","export default __webpack_public_path__ + \"static/media/upcoming-bus.2b458b3e.svg\";","export default __webpack_public_path__ + \"static/media/write.4065a583.svg\";","import styled from \"styled-components\";\nimport { IStop, MAIN_GREY, StopKeys } from \"./Schedule/consts\";\n\nconst FavoriteBusStopItem = styled.div<{ active: boolean }>`\n  padding: 8px 17px;\n  border-radius: 30px;\n  background-color: ${(props) => (props.active ? \"#336CFF\" : MAIN_GREY)};\n  color: ${(props) => (props.active ? \"white\" : \"black\")};\n\n  & + & {\n    margin-left: 12px;\n  }\n`;\n\nconst FavoriteBusStopContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst FavoriteBusStopList: React.FC<{\n  stopList: IStop[];\n  activeId: string;\n  onClick: (busStop: StopKeys) => void;\n}> = ({ stopList, activeId, onClick }) => {\n  return (\n    <FavoriteBusStopContainer>\n      {stopList.map((stop) => (\n        <FavoriteBusStopItem\n          active={stop.value === activeId}\n          key={stop.value}\n          onClick={() => onClick(stop.value)}\n        >\n          {stop.label}\n        </FavoriteBusStopItem>\n      ))}\n    </FavoriteBusStopContainer>\n  );\n};\n\nexport default FavoriteBusStopList;\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div<{ w: number; h: number }>`\n  width: ${(props) => `${props.w}px`};\n  height: ${(props) => `${props.h}px`};\n`;\n","import styled from \"styled-components\";\nimport SVG from \"react-inlinesvg\";\n\nimport { ImageWrapper } from \"./ImageWrapper\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\nconst HeaderText = styled.h1`\n  font-size: 17px;\n  font-weight: normal;\n  margin-left: 8px;\n`;\nconst HeaderItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ninterface IHeaderProps {\n  text: string | any;\n  imgSrc: any;\n  children?: React.ReactNode;\n}\n\nconst Header: React.FC<IHeaderProps> = ({\n  text: Text,\n  imgSrc,\n  children = null,\n}) => {\n  return (\n    <HeaderContainer>\n      <HeaderItem>\n        <ImageWrapper w={23} h={23}>\n          <SVG src={imgSrc} width={23} height={23} uniquifyIDs={true} />\n        </ImageWrapper>\n\n        <HeaderText>{typeof Text === \"string\" ? Text : <Text />}</HeaderText>\n      </HeaderItem>\n\n      {children && <HeaderItem>{children}</HeaderItem>}\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/telegram-logo.b27302a3.svg\";","import SVG from \"react-inlinesvg\";\nimport styled from \"styled-components\";\n\nimport { ImageWrapper } from \"./ImageWrapper\";\nimport TelegramLogo from \"./img/telegram-logo.svg\";\n\nconst TelegramContainer = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  color: #26a4e3;\n  border: 1px solid #26a4e3;\n  background-color: white;\n  border-radius: 6px;\n`;\nconst TelegramText = styled.p`\n  color: #26a4e3;\n  margin: 0 0 0 10px;\n`;\n\nconst TelegramButton = () => {\n  return (\n    <a href=\"https://t.me/ndrwbv\" target=\"_blank\" rel=\"noreferrer\">\n      <TelegramContainer>\n        <ImageWrapper w={20} h={20}>\n          <SVG\n            src={TelegramLogo}\n            width={20}\n            height={20}\n            title=\"Menu\"\n            uniquifyIDs={true}\n          />\n        </ImageWrapper>\n\n        <TelegramText>Написать в телеграм</TelegramText>\n      </TelegramContainer>\n    </a>\n  );\n};\n\nexport default TelegramButton;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport SVG from \"react-inlinesvg\";\nimport Select from \"react-select\";\n\nimport { Directions, MAIN_GREY, SCHEDULE, StopKeys, Stops } from \"./consts\";\nimport {\n  calculateHowMuchIsLeft,\n  findClosesTime,\n  findClosesTimeArray,\n  ITime,\n} from \"./helpers\";\n\nimport GreenHeart from \"../img/green-heart.svg\";\nimport BusStop from \"../img/bus-stop.svg\";\nimport NextBus from \"../img/next-bus.svg\";\nimport UpcomingBus from \"../img/upcoming-bus.svg\";\nimport Write from \"../img/write.svg\";\n\nimport FavoriteBusStopList from \"../FavoriteBusStopList\";\nimport Header from \"../Header\";\nimport { ImageWrapper } from \"../ImageWrapper\";\nimport TelegramButton from \"../TelegramButton\";\n\nconst MainLayout = styled.div`\n  padding: 15px;\n`;\nconst HowMuchLeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 15px 17px;\n  background-color: ${MAIN_GREY};\n  border-radius: 6px;\n`;\nconst LinksBlock = styled.div``;\nconst BusEstimation = styled.div`\n  font-size: 18px;\n  margin-left: 19px;\n`;\nconst TextWrapper = styled.p``;\nconst HighLighted = styled.span`\n  font-weight: bold;\n`;\nconst OtherTime = styled.div`\n  padding: 22px 26px;\n  background-color: ${MAIN_GREY};\n  border-radius: 6px;\n`;\nconst TimeStamp = styled.div`\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst GoButton = styled.button<{ active?: boolean }>`\n  width: 100%;\n  border: none;\n  border-radius: 6px;\n  background-color: ${(props) => (props.active ? \"#336CFF\" : MAIN_GREY)};\n  color: ${(props) => (props.active ? \"white\" : \"black\")};\n  padding: 12px 10px;\n\n  & + & {\n    margin-left: 6px;\n  }\n`;\n\ntype FavoriteButtonStatuses = \"add\" | \"remove\";\nconst AddToFavoriteButton = styled.button<{ status: FavoriteButtonStatuses }>`\n  width: 100%;\n  border: none;\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.status === \"add\" ? \"#6BD756\" : \"#D75656\"};\n  color: white;\n  padding: 12px 17px;\n\n  margin-top: 8px;\n`;\nconst GoButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Container = styled.div`\n  & + & {\n    margin-top: 44px;\n  }\n`;\n\nconst GrayText = styled.p`\n  margin: 0;\n  color: #b2b2b2;\n  font-size: 12px;\n  a {\n    color: inherit;\n  }\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\n\nconst TelegramContainer = styled.div`\n  padding-left: 31px;\n`;\n\nconst currentDay = new Date().getDay();\n\nfunction Schedule() {\n  const [busStop, setBusStop] = React.useState<StopKeys>(\"В. Маяковского\");\n  const [left, setLeft] = React.useState<ITime>({\n    hours: 0,\n    minutes: 0,\n  });\n  const [closestTimeArray, setClossestTimeArray] = React.useState<string[]>([]);\n  const [closestTime, setClossestTime] = React.useState<Date | null>(null);\n\n  const [_everyMinuteUpdate, _setUpdate] = React.useState(0);\n  const [direction, setDirection] = React.useState<Directions>(\"in\");\n  const [favoriteBusStops, setFavoriteBusStops] = React.useState<StopKeys[]>(\n    []\n  );\n\n  React.useEffect(() => {\n    const localStorageItem = localStorage.getItem(\"favoriteStops\");\n    const favoriteStops = localStorageItem ? JSON.parse(localStorageItem) : [];\n\n    setFavoriteBusStops(favoriteStops);\n  }, []);\n\n  React.useEffect(() => {\n    const int = setInterval(() => _setUpdate(Date.now()), 1000);\n\n    return () => {\n      clearInterval(int);\n    };\n  }, [_everyMinuteUpdate]);\n\n  React.useEffect(() => {\n    const _closestTime = findClosesTime(\n      SCHEDULE[direction][currentDay][busStop]\n    );\n\n    if (\n      _closestTime?.getMinutes() !== closestTime?.getMinutes() &&\n      _closestTime?.getHours() !== closestTime?.getHours()\n    ) {\n      setClossestTimeArray(\n        findClosesTimeArray(SCHEDULE[direction][currentDay][busStop])\n      );\n      setClossestTime(_closestTime);\n    }\n  }, [_everyMinuteUpdate, closestTime, busStop, direction]);\n\n  React.useEffect(() => {\n    const left = calculateHowMuchIsLeft(closestTime);\n\n    setLeft(left);\n  }, [_everyMinuteUpdate, closestTime]);\n\n  const renderLeftToString = () => {\n    if (left.hours === null && left.minutes === null)\n      return (\n        <TextWrapper>\n          Автобус на остановку <b>{busStop}</b> сегодня не приедет\n        </TextWrapper>\n      );\n\n    return (\n      <TextWrapper>\n        Следующий автобус приедет через{\" \"}\n        <HighLighted>\n          {left.hours === 0 ? \"\" : `${left.hours}ч `}\n          {left.minutes}м\n        </HighLighted>\n      </TextWrapper>\n    );\n  };\n\n  const saveFavoriteBusStops = (stops: StopKeys[]) => {\n    setFavoriteBusStops(stops);\n    localStorage.setItem(\"favoriteStops\", JSON.stringify(stops));\n  };\n\n  const getFavoriteBusStop = (): StopKeys[] => {\n    const localStorageItem = localStorage.getItem(\"favoriteStops\");\n    const favoriteStops = localStorageItem ? JSON.parse(localStorageItem) : [];\n\n    return favoriteStops;\n  };\n\n  const handleAddFavoriteStatus = () => {\n    const stops = getFavoriteBusStop();\n\n    if (stops.includes(busStop)) return;\n\n    const newStops: StopKeys[] = [busStop, ...stops];\n    saveFavoriteBusStops(newStops);\n  };\n\n  const handleRemoveFavoriteStatus = () => {\n    const stops = getFavoriteBusStop();\n\n    if (!stops.includes(busStop)) return;\n\n    const newStops: StopKeys[] = stops.filter((stop) => stop !== busStop);\n\n    saveFavoriteBusStops(newStops);\n  };\n\n  const isBusStopFavorite = favoriteBusStops.includes(busStop);\n\n  return (\n    <MainLayout>\n      <Container>\n        <GoButtonContainer>\n          <GoButton\n            active={direction === \"in\"}\n            onClick={() => setDirection(\"in\")}\n          >\n            в северный парк\n          </GoButton>\n          <GoButton\n            active={direction === \"out\"}\n            onClick={() => setDirection(\"out\")}\n          >\n            из северного парка\n          </GoButton>\n        </GoButtonContainer>\n      </Container>\n\n      <Container>\n        <Header text={\"Мои остановки\"} imgSrc={GreenHeart} />\n        <FavoriteBusStopList\n          stopList={Stops.filter((stop) =>\n            favoriteBusStops.includes(stop.value)\n          )}\n          activeId={busStop}\n          onClick={(busStop) => setBusStop(busStop)}\n        />\n      </Container>\n\n      <Container>\n        <Header text={\"Остановка\"} imgSrc={BusStop}>\n          <Select\n            options={Stops}\n            onChange={(e) => setBusStop(e?.value as StopKeys)}\n            value={Stops.find((stop) => stop.value === busStop)}\n            defaultValue={Stops[0]}\n          />\n        </Header>\n\n        <HowMuchLeftContainer>\n          <ImageWrapper w={39} h={39}>\n            <SVG src={NextBus} width={39} height={39} uniquifyIDs={true} />\n          </ImageWrapper>\n\n          <BusEstimation>{renderLeftToString()}</BusEstimation>\n        </HowMuchLeftContainer>\n      </Container>\n\n      <Container>\n        <Header text={\"Ещё автобусы на сегодня\"} imgSrc={UpcomingBus} />\n\n        <OtherTime>\n          {closestTimeArray.length === 0\n            ? \"Автобусов на сегодня нет\"\n            : closestTimeArray.map((d) => <TimeStamp key={d}>{d}</TimeStamp>)}\n        </OtherTime>\n\n        <AddToFavoriteButton\n          status={isBusStopFavorite ? \"remove\" : \"add\"}\n          onClick={\n            isBusStopFavorite\n              ? handleRemoveFavoriteStatus\n              : handleAddFavoriteStatus\n          }\n        >\n          {isBusStopFavorite\n            ? \"Удалить остановку из избранного\"\n            : \"Добавить остановку в избранное\"}\n        </AddToFavoriteButton>\n      </Container>\n\n      <Container>\n        <Header\n          text={() => (\n            <>\n              Увидели ошибку?\n              <br />\n              Есть предложение по улучшению?\n            </>\n          )}\n          imgSrc={Write}\n        />\n\n        <TelegramContainer>\n          <TelegramButton />\n        </TelegramContainer>\n      </Container>\n\n      <Container>\n        <LinksBlock>\n          <GrayText>\n            Расписание взято с сайта{\" \"}\n            <a\n              href=\"http://www.tomskavtotrans.ru/60\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              tomskavtotrans.ru\n            </a>\n          </GrayText>\n\n          <GrayText>© Andrew Boev</GrayText>\n        </LinksBlock>\n      </Container>\n    </MainLayout>\n  );\n}\n\nexport default Schedule;\n","\nimport React from 'react';\nimport Schedule from './Schedule';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Schedule />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}